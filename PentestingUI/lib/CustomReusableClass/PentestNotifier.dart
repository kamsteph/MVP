import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../DTO/PentestModel.dart';


final pentestProvider = StateNotifierProvider<PentestNotifier, List<PentestTask>>((ref) {
  return PentestNotifier();
});

class PentestNotifier extends StateNotifier<List<PentestTask>> {
  PentestNotifier() : super([]);

  void addPentest(PentestTask task) {
    state = [...state, task];
  }

  void updatePentest(String id, {String? status, String? progressMessage}) {
    state = state.map((t) {
      if (t.id == id) {
        return PentestTask(
          id: t.id,
          type: t.type,
          status: status ?? t.status,
          progressMessage: progressMessage ?? t.progressMessage,
        );
      }
      return t;
    }).toList();
  }

  void removePentest(String id) {
    state = state.where((t) => t.id != id).toList();
  }
}
