import 'package:flutter/material.dart';

/// GenAI-style upload button (no use of `withOpacity`)
Widget genAIUploadButton({
  required String title,
  required int count,
  required VoidCallback onTap,
}) {
  // Colors chosen to match "blue -> purple" gradient with alpha using fromRGBO
  const Color gradientStart = Color.fromRGBO(33, 150, 243, 0.40); // blue, 40% alpha
  const Color gradientEnd = Color.fromRGBO(156, 39, 176, 0.40);  // purple, 40% alpha
  const Color borderColor = Color.fromRGBO(255, 255, 255, 0.28);
  const Color shadowColor = Color.fromRGBO(0, 0, 0, 0.16);

  return Material(
    child: InkWell(
      onTap: onTap,
      borderRadius: BorderRadius.circular(16),
      child: Container(
        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
        margin: const EdgeInsets.symmetric(vertical: 8),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(16),
          gradient: const LinearGradient(
            colors: [gradientStart, gradientEnd],
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
          border: Border.all(color: borderColor),
          boxShadow: [
            BoxShadow(
              color: shadowColor,
              blurRadius: 12,
              offset: const Offset(0, 6),
            ),
          ],
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Row(
              children: [
                const Icon(Icons.upload_file, color: Colors.white),
                const SizedBox(width: 12),
                Text(
                  title,
                  style: const TextStyle(
                    fontWeight: FontWeight.w700,
                    fontSize: 16,
                    color: Colors.white,
                  ),
                ),
              ],
            ),
            Container(
              padding: const EdgeInsets.symmetric(vertical: 6, horizontal: 12),
              decoration: BoxDecoration(
                color: count == 0
                    ? const Color.fromRGBO(255, 255, 255, 0.06)
                    : const Color.fromRGBO(0, 0, 0, 0.18),
                borderRadius: BorderRadius.circular(12),
              ),
              child: Text(
                count == 0 ? "No file" : "$count selected",
                style: TextStyle(
                  fontSize: 13,
                  color: count == 0 ? Colors.grey[300] : Colors.greenAccent[200],
                  fontWeight: FontWeight.w600,
                ),
              ),
            ),
          ],
        ),
      ),
    ),
  );
}

Widget stylishSegmentedScope({
  required String selected,
  required ValueChanged<String> onChanged,
}) {
  final scopes = {
    "black": "Black Box",
    "grey": "Grey Box",
    "white": "White Box",
  };

  return Row(
    mainAxisAlignment: MainAxisAlignment.start,
    children: scopes.entries.map((entry) {
      final isSelected = selected == entry.key;
      return GestureDetector(
        onTap: () => onChanged(entry.key),
        child: AnimatedContainer(
          duration: const Duration(milliseconds: 200),
          margin: const EdgeInsets.symmetric(horizontal: 6),
          padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 18),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(14),
            color: isSelected
                ? Colors.blueAccent.withOpacity(0.9)
                : Colors.grey.shade200,
            border: Border.all(
              color: isSelected ? Colors.blueAccent : Colors.grey.shade400,
              width: 1.2,
            ),
            boxShadow: isSelected
                ? [
              BoxShadow(
                color: Colors.blueAccent.withOpacity(0.4),
                blurRadius: 6,
                offset: const Offset(0, 3),
              )
            ]
                : [],
          ),
          child: Text(
            entry.value,
            style: TextStyle(
              color: isSelected ? Colors.white : Colors.black87,
              fontWeight: isSelected ? FontWeight.bold : FontWeight.w500,
              fontSize: 14,
            ),
          ),
        ),
      );
    }).toList(),
  );
}

