import 'package:flutter/material.dart';

import '../DTO/UserStorage.dart';

class CustomInputField extends StatelessWidget {
  final TextEditingController controller;
  final String label;
  final bool requiredField;
  final int minLines;
  final int maxLines;
  final String hintText;
  final String? inputKey;

  const CustomInputField({
    super.key,
    required this.controller,
    required this.label,
    this.requiredField = false,
    this.minLines = 1,
    this.maxLines = 1,
    this.hintText = "",
    this.inputKey,
  });

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<List<String>>(
      future: inputKey != null ? UserDataStorage.getRecent(inputKey!) : Future.value([]),
      builder: (context, snapshot) {
        final suggestions = snapshot.data ?? [];
        return Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            if (suggestions.isNotEmpty)
              DropdownButtonFormField<String>(
                initialValue: controller.text.isNotEmpty ? controller.text : null,
                items: suggestions
                    .map((v) => DropdownMenuItem(value: v, child: Text(v)))
                    .toList(),
                onChanged: (val) => controller.text = val ?? "",
                decoration: InputDecoration(
                  labelText: label,
                  border: OutlineInputBorder(),
                ),
              )
            else
              TextFormField(
                controller: controller,
                minLines: minLines,
                maxLines: maxLines,
                validator: (value) {
                  if (requiredField && (value == null || value.trim().isEmpty)) {
                    return "This field is required";
                  }
                  return null;
                },
                decoration: InputDecoration(
                  hintText: hintText,
                  labelText: label,
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
                  alignLabelWithHint: true,
                ),
              ),
          ],
        );
      },
    );
  }
}
