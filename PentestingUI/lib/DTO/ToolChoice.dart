import 'package:flutter/material.dart';
import 'package:file_picker/file_picker.dart';

class ScopeConfig {
  // --- Vulnerability and Exploit Tools ---
  Map<String, List<String>> vulnTools; // multiple vuln tools per category
  String exploitTool;                  // single exploit tool

  // --- Scope ---
  bool isFullPentest;                  // full vs custom
  Map<String, List<String>> selectedAreas;
  bool isAdvanced;                     // advanced mode toggle

  // --- Scan Aspects ---
  bool allAspects;                     // if true, assetEnum, reachability, deepScan are forced
  bool assetEnum;
  bool reachability;
  bool deepScan;

  //---Subnet Mask---
  bool isSubnetMask;

  // --- Port Options ---
  String portMode;                      // top10 | all | custom
  TextEditingController customPortsController = TextEditingController();

  // --- Packet Type ---
  String packetType;                    // TCP | UDP | Both

  // --- Other Controllers ---
  List<TextEditingController> ipControllers = [TextEditingController()];

  List<PlatformFile> insiderFiles = [];
  List<PlatformFile> codebaseFiles = [];

  Map<String, List<String>> backupAreas = {};

  // --- Scope Type ---
  String scope;

  ScopeConfig({
    Map<String, List<String>>? vulnTools,
    this.exploitTool = "Default",
    this.isFullPentest = false,
    Map<String, List<String>>? selectedAreas,
    this.isAdvanced = false,
    this.allAspects = true,
    this.assetEnum = false,
    this.reachability = false,
    this.deepScan = false,
    this.portMode = "top10",
    this.packetType = "TCP",
    this.scope = "black",
    this.isSubnetMask=false
  })  : vulnTools = vulnTools ??
      {
        "Asset Enumeration": ["Default"],
        "Reachability": [],
        "Deep Scan": [],
      },
        selectedAreas = selectedAreas ?? {};

  void dispose() {
    for (var c in ipControllers) {
      c.dispose();
    }
    customPortsController.dispose();
  }
}
