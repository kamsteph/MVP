import 'dart:convert'; // Required for jsonDecode if you put main logic here
import 'VulnScanDTO.dart'; // Ensure correct path!

class WebScanResult {
  final String? error;
  final List<VulnerabilityEntry> vulnerabilities;
  final String summary;
  final String scanTool;
  final String status;
  final String? target; // Matches your Python Pydantic model
  final int? rawAlertsCount;
  final String exportFormat;
  final List<String?>? socialUrls;

  WebScanResult({
    this.error,
    required this.vulnerabilities,
    required this.summary,
    required this.scanTool,
    required this.status,
    this.target,
    this.rawAlertsCount,
    this.exportFormat="both",
    this.socialUrls = const [], // Default to empty list
  });

  // Factory constructor to create a WebScanResult from a JSON Map
  factory WebScanResult.fromJson(Map<String, dynamic> json) {
    var vList = json['vulnerabilities'] as List? ?? [];
    List<VulnerabilityEntry> vulnerabilities = vList
        .map((i) => VulnerabilityEntry.fromJson(i as Map<String, dynamic>))
        .toList();

    // Handle null or missing list
    var sUrls = (json['social_urls'] as List?)?.map((e) => e.toString()).toList() ?? [];

    return WebScanResult(
      error: json['error'],
      vulnerabilities: vulnerabilities,
      summary: json['summary'] ?? '',
      scanTool: json['scan_tool'] ?? 'N/A',
      status: json['status'] ?? 'unknown',
      target: json['target'],
      rawAlertsCount: json['raw_alerts_count'],
      exportFormat: json['export_format'],
      socialUrls: sUrls,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'error': error,
      'vulnerabilities': vulnerabilities.map((v) => v.toJson()).toList(),
      'summary': summary,
      'scan_tool': scanTool,
      'status': status,
      'target': target,
      'raw_alerts_count': rawAlertsCount,
      'export_format': exportFormat,
      'social_urls': socialUrls,
    };
  }
}
