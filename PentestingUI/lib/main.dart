import 'package:flutter/material.dart';
import 'package:pentest/CustomReusableClass/PentestBar.dart';
import 'package:pentest/CustomReusableClass/PentestProgressPage.dart';
import 'CustomReusableClass/EventBusBridge.dart';
import 'PentestOptions/PentestingOption.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:web_socket_channel/web_socket_channel.dart';

void main() {
  WidgetsFlutterBinding.ensureInitialized();

  runApp(
      const ProviderScope(
        child:  MyApp(),
      )
  );
}

class MyApp extends ConsumerStatefulWidget {
  const MyApp({super.key});

  @override
  ConsumerState<MyApp> createState() => _MyAppState();
}

class _MyAppState extends ConsumerState<MyApp> {
  late EventBusBridge bridge;

  @override
  void initState() {
    super.initState();
    final channel = WebSocketChannel.connect(
      Uri.parse("ws://localhost:8765"), // Backend EventBus WebSocket
    );
    bridge = EventBusBridge(ref, channel);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      routes: {
        "/pentest-progress": (context) {
          final taskId=ModalRoute.of(context)!.settings.arguments as String;
          return PentestProgressPage(taskId: taskId);
        },
      },
      title: 'Pentest Scanner',
      home: Stack(
        children: [
          const VulnerabilityScannerApp(),
          const ActivePentestsBar(),
        ],
      ),
      debugShowCheckedModeBanner: false,
    );
  }
}
