import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

import '../KaliaPentesting/WebPentesting.dart';

class WebPentestAreasPage extends StatefulWidget {
  const WebPentestAreasPage({super.key});

  @override
  State<WebPentestAreasPage> createState() => _WebPentestAreasPageState();
}

class _WebPentestAreasPageState extends State<WebPentestAreasPage> {
  final List<Map<String, dynamic>> webAreas = [
    {"name": "Input fields & forms", "icon": Icons.text_fields},
    {"name": "Authentication & sessions", "icon": Icons.lock},
    {"name": "API endpoints", "icon": Icons.api},
    {"name": "File uploads", "icon": Icons.upload_file},
    {"name": "Client-side logic (JavaScript)", "icon": Icons.code},
    {"name": "3rd-party integrations", "icon": Icons.extension},
    {"name": "Cookies & local storage", "icon": Icons.cookie},
    {"name": "CORS policies", "icon": Icons.compare_arrows},
    {"name": "Error handling & logging", "icon": Icons.bug_report},
    {"name": "Security headers (CSP, HSTS, etc.)", "icon": Icons.shield},
  ];

  final Set<String> _selectedAreas = {};
  bool _isFullPentest = false;

  void _toggleAreaSelection(String area) {
    setState(() {
      if (_selectedAreas.contains(area)) {
        _selectedAreas.remove(area);
      } else {
        _selectedAreas.add(area);
      }
      _isFullPentest = false; // disable full pentest when custom selected
    });
  }

  void _toggleFullPentest() {
    setState(() {
      _isFullPentest = !_isFullPentest;
      if (_isFullPentest) _selectedAreas.clear();
    });
  }

  @override
  Widget build(BuildContext context) {
    const double borderRadiusValue = 16;

    return Scaffold(
      appBar: AppBar(
        title: const Text("Web Pentest Attack Areas"),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            // --- Full Pentest button ---
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: _toggleFullPentest,
                style: ElevatedButton.styleFrom(
                  backgroundColor:
                  _isFullPentest ? Colors.blue.shade800 : Colors.blue.shade400,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(borderRadiusValue),
                  ),
                  padding: const EdgeInsets.symmetric(vertical: 16),
                ),
                child: Text(
                  "Select All (Full Pentest)",
                  style: GoogleFonts.openSans(
                      fontSize: 16, fontWeight: FontWeight.w600),
                ),
              ),
            ),
            const SizedBox(height: 20),

            // --- Grid of cards ---
            Expanded(
              child: GridView.builder(
                itemCount: webAreas.length,
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2, // 2 cards per row
                  crossAxisSpacing: 16,
                  mainAxisSpacing: 16,
                  childAspectRatio: 1,
                ),
                itemBuilder: (context, index) {
                  final area = webAreas[index]["name"];
                  final icon = webAreas[index]["icon"];
                  final isSelected = _selectedAreas.contains(area);

                  return GestureDetector(
                    onTap: () => _toggleAreaSelection(area),
                    child: Card(
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(borderRadiusValue),
                        side: BorderSide(
                          color: isSelected ? Colors.green : Colors.grey.shade400,
                          width: 2,
                        ),
                      ),
                      elevation: 4,
                      child: Padding(
                        padding: const EdgeInsets.all(12),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(icon,
                                size: 40,
                                color: isSelected
                                    ? Colors.green.shade700
                                    : Colors.grey.shade600),
                            const SizedBox(height: 12),
                            Text(
                              area,
                              textAlign: TextAlign.center,
                              style: GoogleFonts.openSans(
                                fontSize: 14,
                                fontWeight: FontWeight.w600,
                                color: isSelected
                                    ? Colors.green.shade700
                                    : Colors.black87,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  );
                },
              ),
            ),

            // --- Continue button ---
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: (!_isFullPentest && _selectedAreas.isEmpty)
                  ? null
                  : () {
                final attackSurface =
                _isFullPentest ? "full" : _selectedAreas.toList();
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) =>
                        WebScanPage(attackSurface: attackSurface),
                  ),
                );
              },
              style: ElevatedButton.styleFrom(
                minimumSize: const Size(double.infinity, 50),
                backgroundColor: Colors.green.shade600,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(borderRadiusValue),
                ),
              ),
              child: const Text("Continue", style: TextStyle(fontSize: 18)),
            ),
          ],
        ),
      ),
    );
  }
}
