# back_end/Regions/l_region/local_helper.py
import logging

logger = logging.getLogger("LocalHelper")

class LocalHelper:
    """
    Provides helper functions for LocalLearner:
    - Checks if vulnerability exists in Augmented DB.
    - Flags events as new/known before staging.
    """

    def __init__(self, db_manager):
        self.db = db_manager

    def enrich_with_adb_flag(self, event: dict) -> dict:
        """
        Query ADB to check if vuln already exists. Add 'adb_exists' flag.
        """
        vuln_id = event.get("vuln", {}).get("id") or event.get("vuln", {}).get("alert")
        if not vuln_id:
            event["adb_exists"] = False
            return event

        found = self.db.adb_collection.find_one({"vuln.id": vuln_id})
        if found:
            event["adb_exists"] = True
        else:
            event["adb_exists"] = False
        return event
