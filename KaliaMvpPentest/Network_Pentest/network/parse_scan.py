import xml.etree.ElementTree as ET

def parse_nmap_output(xml_file):
    print("[+] Parsing Nmap XML...")
    results = []

    tree = ET.parse(xml_file)
    root = tree.getroot()

    for host in root.findall('host'):
        host_result = {
            "address": None,
            "status": None,
            "ports": []
        }

        # Host address (e.g., IPv4)
        address = host.find("address")
        if address is not None:
            host_result["address"] = address.attrib.get("addr")

        # Host status (up/down)
        status = host.find("status")
        if status is not None:
            host_result["status"] = status.attrib.get("state", "unknown")

        # Ports
        ports = host.find("ports")
        if ports is not None:
            for port in ports.findall("port"):
                port_num = int(port.attrib.get("portid", 0))
                protocol = port.attrib.get("protocol", "tcp")
                state_el = port.find("state")
                service_el = port.find("service")

                state = state_el.attrib.get("state", "unknown") if state_el is not None else "unknown"
                service = service_el.attrib.get("name", "unknown") if service_el is not None else "unknown"

                # More detailed service info if available
                product = service_el.attrib.get("product") if service_el is not None else None
                version = service_el.attrib.get("version") if service_el is not None else None
                extrainfo = service_el.attrib.get("extrainfo") if service_el is not None else None

                # Port scripts
                scripts = {}
                for script in port.findall("script"):
                    scripts[script.attrib.get("id", "unknown")] = script.attrib.get("output", "")

                host_result["ports"].append({
                    "port": port_num,
                    "protocol": protocol,
                    "state": state,
                    "service": service,
                    "product": product,
                    "version": version,
                    "extrainfo": extrainfo,
                    "scripts": scripts if scripts else None
                })

        results.append(host_result)

    return results
