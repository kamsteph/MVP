# new_module/utils/visualizer.py
"""
Visualizer utilities for inspecting PyG graph structures (nodes, edges, features).
"""

import matplotlib.pyplot as plt
import networkx as nx
from torch_geometric.utils import to_networkx

def visualize_graph(data, node_labels=None, title="Graph Visualization"):
    """
    Visualize a PyG graph using networkx.
    - data: torch_geometric.data.Data
    - node_labels: optional list of labels or a tensor
    """
    G = to_networkx(data, to_undirected=True)
    pos = nx.spring_layout(G, seed=42)

    plt.figure(figsize=(8, 6))
    nx.draw(
        G,
        pos,
        with_labels=True,
        node_color="skyblue",
        node_size=700,
        edge_color="gray",
        font_size=8,
        font_weight="bold"
    )
    if node_labels is not None:
        node_labels = [str(l) for l in node_labels]
        nx.draw_networkx_labels(G, pos, labels=dict(zip(G.nodes(), node_labels)), font_color="black")
    plt.title(title)
    plt.show()

