from Network_Pentest.network.tool.base_class import register_tool
from Network_Pentest.network.tool.cli.cli_wrapper_base import CLIToolHelper


@register_tool("nmap", mode="cli")
class NmapCLI(CLIToolHelper):
    binary_name = "nmap"
    category = "vulnerability"
    supports_ipv6 = True

    async def scan(self, target: str, ports=None, **kwargs):
        args = []
        if ports:
            args += ["-p", ",".join(map(str, ports))]
        args += ["-oX", "-", target]  # print XML to stdout
        res = await self.run_command(args)
        # parsing omitted â€” return naive parse
        out = res.get("stdout", "")
        # parse quickly for example
        open_ports = []
        for line in out.splitlines():
            if "/tcp open" in line:
                try:
                    open_ports.append(int(line.split("/")[0]))
                except Exception:
                    pass
        return [{"port": p, "state": "open"} for p in open_ports]
