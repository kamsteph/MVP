# ==============================
# MAIN RUNNER
# ==============================
import os

from Network_Pentest.network.db_manip.build_graph_caching import build_graph_cache

if __name__ == "__main__":
    import torch
    from Network_Pentest.network.dynamic_vendor_embedding import VendorEmbeddingManager

    print("=== BUILD GRAPH CACHE STARTED ===")

    # Initialize vendor embedding manager (loads or creates vendor vectors)
    vendor_mgr = VendorEmbeddingManager(
        initial_vendor_list="./data/vendors.txt",  # or None if handled internally
        emb_dim=16,
        device="cpu"
    )

    # Build the graph
    graph_cache = build_graph_cache(vendor_mgr=vendor_mgr, k_nn=8, sim_threshold=0.25)

    # Make sure cache dir exists
    os.makedirs("./cache", exist_ok=True)

    # Save to disk
    cache_path = "./cache/graph_cache.pt"
    torch.save(graph_cache, cache_path)

    print(f"✅ Graph cache saved to: {cache_path}")
    data = graph_cache["data"]
    print(f"✅ Graph Stats: {data.num_nodes} nodes, {data.num_edges} edges, "
          f"feature_dim={data.num_node_features}, labels={data.y.unique(return_counts=True)}")
    print("=== BUILD GRAPH CACHE COMPLETED ===")
