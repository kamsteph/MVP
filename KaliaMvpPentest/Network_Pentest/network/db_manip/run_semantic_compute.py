# run_semantic_only.py
import logging
from datetime import datetime
import sys
import os
from Network_Pentest.network.db_manip.semantic_compute import compute_and_store

#sys.stdout.reconfigure(encoding='utf-8')
sys.path.append("/MVP/KaliaMvpPentest")
# Logging setup
os.makedirs("logs", exist_ok=True)
log_file = f"logs/semantic_run_{datetime.now().strftime('%Y%m%d_%H%M%S')}.log"
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    handlers=[logging.FileHandler(log_file), logging.StreamHandler(sys.stdout)]
)
logger = logging.getLogger("SEMANTIC_RUN")

# ------------------------------------------------------------
# Import and run semantic pipeline
# ------------------------------------------------------------
try:
    from Network_Pentest.network.db_manip.semantic_compute import compute_and_store
except ImportError:
    logger.error("Could not import compute_semantic_temporal. Check file path.")
    sys.exit(1)

def main():
    logger.info("STARTING SEMANTIC COMPUTATION...")
    compute_and_store(project_dim=64, batch_size=256)
    logger.info("SEMANTIC COMPUTATION COMPLETED SUCCESSFULLY.")

if __name__ == "__main__":
    main()
